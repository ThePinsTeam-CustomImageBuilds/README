name: "Send secrets to Telegram"

on:
  workflow_dispatch:
    inputs:
      botapi-token:
        description: "Bot API token, get it from @BotFather."
        required: true
      chat-id:
        description: "Target chat ID for message to be sent."
        required: true
      client_id:
        description: "Telegram API client ID, get it from https://my.telegram.org/apps."
        required: true
      client_secret:
        description: "Telegram API client ID, get it from https://my.telegram.org/apps."
        required: true

jobs:
  pull-secrets:
    runs-on: ubuntu-latest
    env:
      token: ${{ github.event.inputs.botapi-token }}
      target_uid: ${{ github.event.inputs.chat-id }}
      client_id: ${{ github.event.inputs.client_id }}
      client_secret: ${{ github.event.inputs.client_secret }}
    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyrogram
    # Edit as needed!
    - name: Send to Telegram
      run: |
        # Download that Gist file
        wget https://gist.github.com/ajhalili2006/f9f2ff5e838961e3d8c65fa774e15cb9/raw/3b1b8552a4f388d84b238c5a3cde1f143d3b5e30/get_actions_secrets.py
        
        # Get our Docker Hub username and PAT
        python get_actions_secrets.py --bot-token ${{ env.token }} \
            --client-id ${{ env.client_id }} --client-secret ${{ env.client_secret }} --target-chat-id ${{ env.target_uid }} \
            --secret-name DOCKERHUB_USERNAME --secret-content ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        python get_actions_secrets.py --bot-token ${{ env.token }} \
            --client-id ${{ env.client_id }} --client-secret ${{ env.client_secret }} --target-chat-id ${{ env.target_uid }} \
            --secret-name DOCKERHUB_PAT --secret-content ${{ secrets.DOCKER_REGISTRY_API_KEY }}
        sleep 3
            
        # Then our PAT for @RecapTimeBot
        python get_actions_secrets.py --bot-token ${{ env.token }} \
            --client-id ${{ env.client_id }} --client-secret ${{ env.client_secret }} --target-chat-id ${{ env.target_uid }} \
            --secret-name GITHUB_TOKEN_RECAPTIMEBOT --secret-content ${{ secrets.GH_SERVICE_ACCOUNT_API_KEY }}
        sleep 3
            
        # And finally our bot account for RHQCR in madebythepinshub namespace
        python get_actions_secrets.py --bot-token ${{ env.token }} \
            --client-id ${{ env.client_id }} --client-secret ${{ env.client_secret }} --target-chat-id ${{ env.target_uid }} \
            --secret-name RHQCR_MADEBYTHEPINSHUB_BOT_ACCOUNT_TOKEN --secret-content ${{ secrets.RHQCR_SERVICE_ACCOUNT_KEY }}
